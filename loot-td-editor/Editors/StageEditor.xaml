<UserControl x:Class="loot_td_editor.Editors.StageEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:loot_td_editor.Editors"
             xmlns:localx="clr-namespace:loot_td_editor"
             xmlns:loottd="clr-namespace:loot_td"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             d:DesignHeight="900" d:DesignWidth="1600">
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="24*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Content="ADD" Click="AddButtonClick" />
            <Button Grid.Column="1" Content="ADD COPY" Click="CopyButtonClick" />
            <Button Grid.Column="2" Content="REMOVE" Click="RemoveButtonClick" />
            <ListView Grid.Row="1" Grid.ColumnSpan="3" ItemsSource="{Binding}" ScrollViewer.VerticalScrollBarVisibility="Auto" Name="StageListView" Margin="0,10,0,0" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn DisplayMemberBinding="{Binding Path=IdName}" Header="IdName" Width="150" />
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Act}" Header="Act" Width="40" />
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Stage}" Header="Stage" Width="40" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.4*" />
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.4*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <StackPanel>
                <Label Content="IdName" Height="26"></Label>
                <Label Content="Act" Height="26"></Label>
                <Label Content="Stage" Height="26"></Label>
                <Label Content="Difficulty" Height="26"></Label>
                <Label Content="SceneAct" Height="26"></Label>
                <Label Content="SceneStage" Height="26"></Label>
            </StackPanel>
            <StackPanel Grid.Column="1">
                <TextBox Text="{Binding SelectedItem.IdName, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="26"></TextBox>
                <xctk:IntegerUpDown Value="{Binding SelectedItem.Act, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Height="26"></xctk:IntegerUpDown>
                <xctk:IntegerUpDown Value="{Binding SelectedItem.Stage, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Height="26"></xctk:IntegerUpDown>
                <ComboBox SelectedItem="{Binding SelectedItem.Difficulty, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="DifficultyBox"></ComboBox>
                <xctk:IntegerUpDown Value="{Binding SelectedItem.SceneAct, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Height="26"></xctk:IntegerUpDown>
                <xctk:IntegerUpDown Value="{Binding SelectedItem.SceneStage, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Height="26"></xctk:IntegerUpDown>
            </StackPanel>
            <StackPanel Grid.Column="2" Grid.RowSpan="2">
                <Label Content="Monster Level" Height="26"></Label>
                <Label Content="Base Exp" Height="26"></Label>
                <Label Content="Exp Multiplier" Height="26"></Label>
                <Label Content="Equipment Drop Rate Multiplier" Height="26"></Label>
                <Label Content="Consumable Drop Rate Multiplier" Height="26"></Label>
            </StackPanel>
            <StackPanel Grid.Column="3" Grid.RowSpan="2">
                <xctk:IntegerUpDown Value="{Binding SelectedItem.MonsterLevel, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="150" Height="26"></xctk:IntegerUpDown>
                <xctk:IntegerUpDown Value="{Binding SelectedItem.BaseExperience, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Height="26"></xctk:IntegerUpDown>
                <xctk:DoubleUpDown Value="{Binding SelectedItem.ExpMultiplier, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Increment="0.1" Height="26" FormatString="F2"></xctk:DoubleUpDown>
                <xctk:DoubleUpDown Value="{Binding SelectedItem.EquipmentDropRateMultiplier, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.1" Minimum="0" Height="26" FormatString="F2"></xctk:DoubleUpDown>
                <xctk:DoubleUpDown Value="{Binding SelectedItem.ConsumableDropRateMultiplier, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Increment="0.1" Minimum="0" Height="26" FormatString="F2"></xctk:DoubleUpDown>

            </StackPanel>
            
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.90*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1.5*" />
            </Grid.ColumnDefinitions>
            <DockPanel>
                <Button Width="40" Content="ADD" Click="AddButtonClickWave" ></Button>
                <Button Width="40" Content="COPY" Click="CopyButtonClickWave"></Button>
                <Button Width="40" Content="DEL" Click="DelButtonClickWave"></Button>
            </DockPanel>
            <DockPanel Grid.Column="1">
                <Button Width="50" Content="ADD" Click="AddButtonClickWaveItem" ></Button>
                <Button Width="50" Content="COPY" Click="CopyButtonClickWaveItem"></Button>
                <Button Width="50" Content="DEL" Click="DelButtonClickWaveItem"></Button>
            </DockPanel>
            <ListView Grid.Row="1" ItemsSource="{Binding SelectedItem.EnemyWaves, ElementName=StageListView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="EnemyWaveView">
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Id}" Header="Id" Width="35" />
                        <GridViewColumn Header="EnemyList" Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding Path=EnemyList}" DisplayMemberPath="EnemyName"></ItemsControl>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <Grid  Grid.Row="1" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.70*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <StackPanel >
                    <Label Content="delayBetween" Height="26"></Label>
                    <Label Content="delayUntil" Height="26"></Label>
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <xctk:DoubleUpDown Value="{Binding SelectedItem.DelayBetweenSpawns, ElementName=EnemyWaveView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="26" Minimum="0" FormatString="F3" Increment="0.125"></xctk:DoubleUpDown>
                    <xctk:DoubleUpDown Value="{Binding SelectedItem.DelayUntilNextWave, ElementName=EnemyWaveView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="26" Minimum="0" FormatString="F3" Increment="0.125"></xctk:DoubleUpDown>

                </StackPanel>
                <ListView Grid.ColumnSpan="2" Grid.Row="1" ItemsSource="{Binding SelectedItem.EnemyList, ElementName=EnemyWaveView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="WaveItemView">
                    <ListView.View>
                        <GridView AllowsColumnReorder="False">
                            <GridViewColumn DisplayMemberBinding="{Binding Path=EnemyName}" Header="enemyName" Width="100" />
                            <GridViewColumn DisplayMemberBinding="{Binding Path=EnemyCount}" Header="count" Width="35" />
                            <GridViewColumn DisplayMemberBinding="{Binding Path=SpawnerIndex}" Header="index" Width="35" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.70*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Label Content="Enemy"></Label>
                <ComboBox ItemsSource="{Binding}" SelectedValue="{Binding SelectedItem.EnemyName, ElementName=WaveItemView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="EnemyComboBox" Grid.Column="1" SelectedValuePath="IdName" DisplayMemberPath="IdName"></ComboBox>
                <Label Content="Count" Grid.Row="1"></Label>
                <Label Content="Spawner" Grid.Row="2"></Label>
                <Label Content="Goal" Grid.Row="3"></Label>
                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1" Value="{Binding SelectedItem.EnemyCount, ElementName=WaveItemView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="2" Value="{Binding SelectedItem.SpawnerIndex, ElementName=WaveItemView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                <xctk:IntegerUpDown Grid.Column="1" Grid.Row="3" Value="{Binding SelectedItem.GoalIndex, ElementName=WaveItemView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></xctk:IntegerUpDown>
                <Grid Grid.Row="6" Grid.ColumnSpan="2" Grid.RowSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="70" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Name="WaveModComboBox" DisplayMemberPath="IdName"></ComboBox>
                    <Button Grid.Column="1" Content="ADD" Click="AddWavePropertiesClick" />
                    <Button Grid.Column="2" Content="REMOVE" Click="RemoveWavePropertiesClick" />
                    <ListView Grid.ColumnSpan="3" Grid.Row="1" ItemsSource="{Binding SelectedItem.BonusProperties, ElementName=WaveItemView, UpdateSourceTrigger=PropertyChanged}" Name="WavePropertiesList" SelectionMode="Single" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    </ListView>
                </Grid>
            </Grid>
            
        </Grid>
        <DataGrid Grid.Row="0" Grid.Column="2" ItemsSource="{Binding SelectedItem.EquipmentDropList, ElementName=StageListView, UpdateSourceTrigger=PropertyChanged}"  SelectionMode="Single" SelectionUnit="FullRow" CanUserReorderColumns="False" CanUserSortColumns="False"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" AutoGenerateColumns="false">
            <DataGrid.Columns>
                <DataGridComboBoxColumn SelectedValueBinding="{Binding IdName}" SelectedValuePath="IdName" x:Name="EquipmentComboBox" Header="Equipment Base" DisplayMemberPath="IdName"></DataGridComboBoxColumn>
                <DataGridTextColumn Binding="{Binding Weight}" Header="Weight"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Grid.Row="0" Grid.Column="3" ItemsSource="{Binding SelectedItem.ArchetypeDropList, ElementName=StageListView, UpdateSourceTrigger=PropertyChanged}"  SelectionMode="Single" SelectionUnit="FullRow" CanUserReorderColumns="False" CanUserSortColumns="False"  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" AutoGenerateColumns="false">
            <DataGrid.Columns>
                <DataGridComboBoxColumn SelectedValueBinding="{Binding IdName}" SelectedValuePath="IdName" x:Name="ArchetypeComboBox" Header="Archetype Base" DisplayMemberPath="IdName"></DataGridComboBoxColumn>
                <DataGridTextColumn Binding="{Binding Weight}" Header="Weight"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1" Grid.Column="3" >
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="70" />
                <ColumnDefinition Width="70" />
            </Grid.ColumnDefinitions>
            <ComboBox Name="StagePropertiesComboBox" SelectedValuePath="IdName" DisplayMemberPath="IdName"></ComboBox>
            <Button Grid.Column="1" Content="ADD" Click="AddPropertiesClick" />
            <Button Grid.Column="2" Content="REMOVE" Click="RemovePropertiesClick" />
            <ListView Grid.ColumnSpan="3" Grid.Row="1" ItemsSource="{Binding SelectedItem.StageProperties, ElementName=StageListView, UpdateSourceTrigger=PropertyChanged}" Name="StagePropertiesList" SelectionMode="Single" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
            </ListView>
        </Grid>
    </Grid>
</UserControl>
